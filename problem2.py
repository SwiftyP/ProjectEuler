# -*- coding: utf-8 -*-

'''
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
'''

# Since
# np + np = p
# np + p = np
# p + np = np
# p + p = p
# so every third term is even and we calculate only them

# f_n =
# f_n-1 + f_n-2 =
# f_n-2 + f_n-3 + f_n-3 + f_n-4 =
# f_n-3 + f_n-4 + f_n-3 + f_n-3 + f_n-5 + f_n-6 =
# 3*f_n-3 + f_n-4 + f_n-5 + f_n-6 =
# 3*f_n-3 + f_n-3 + f_n-6 =
# 4*f_n-3 + f_n-6

LIMIT = 4000000

n_prev_prev = 0
n_prev = 2
n = 2

even_sum = 0

while n <= LIMIT:
    even_sum = even_sum + n
    n = (4 * n_prev) + n_prev_prev

    n_prev_prev = n_prev
    n_prev = n

print(even_sum)
